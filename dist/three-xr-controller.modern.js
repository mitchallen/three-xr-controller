const e={OCULUS_GO:"oculus-go",OCULUS_TOUCH:"oculus-touch"},t={TOUCHPAD_CLICK:2,INDEX_TRIGGER:0,TOUCHPAD_X:0,TOUCHPAD_Y:1},n={BUTTON_B:5,BUTTON_A:4,BUTTON_Y:5,BUTTON_X:4,THUMBSTICK_CLICK:3,BUTTON_UNKNOWN:2,HAND_TRIGGER:1,INDEX_TRIGGER:0,THUMBSTICK_X:2,THUMBSTICK_Y:3};class r{static connect(e={}){let{xr:t=null}=e;if(!t)throw new Error(".create requires xr");let n=[],r=t.getController(0),o=t.getController(1);return r.addEventListener("connected",function(e){n.push(e.data)}),o.addEventListener("connected",function(e){n.push(e.data)}),{controllers:n,c0:r,c1:o}}static getState(t={}){let{controllers:n=[]}=t,r={profile:"unknown",left:{axes:[],pressed:[]},right:{axes:[],pressed:[]}};return n.forEach(function(t,n){const o=t.handedness;if(o){var s=t.gamepad;if(s){var c=t.profiles,T=s.axes;if([e.OCULUS_GO,e.OCULUS_TOUCH].forEach(function(e){c.includes(e)&&(r.profile=e)}),c&&T)for(let e=0;e<T.length;e++)r[o].axes[e]=T[e];s.buttons.forEach(function(e,t){r[o].pressed[t]=e.pressed})}}}),r}}export{e as CONTROLLER_PROFILE,t as OCULUS_GO,n as OCULUS_QUEST,r as XRCONTROLLER};
//# sourceMappingURL=three-xr-controller.modern.js.map
