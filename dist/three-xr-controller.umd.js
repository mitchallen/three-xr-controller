!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((e=e||self).threeXrController={})}(this,function(e){var n={OCULUS_GO:"oculus-go",OCULUS_TOUCH:"oculus-touch"},o=function(){function e(){}return e.connect=function(e){void 0===e&&(e={});var n=e.xr,o=void 0===n?null:n;if(!o)throw new Error(".create requires xr");var r=[],t=o.getController(0),i=o.getController(1);return t.addEventListener("connected",function(e){r.push(e.data)}),i.addEventListener("connected",function(e){r.push(e.data)}),{controllers:r,c0:t,c1:i}},e.getState=function(e){void 0===e&&(e={});var o=e.controllers,r={profile:"unknown",left:{axes:[],pressed:[]},right:{axes:[],pressed:[]}};return(void 0===o?[]:o).forEach(function(e,o){var t=e.handedness;if(t){var i=e.gamepad;if(i){var f=e.profiles,c=i.axes;if([n.OCULUS_GO,n.OCULUS_TOUCH].forEach(function(e){f.includes(e)&&(r.profile=e)}),f&&c)for(var s=0;s<c.length;s++)r[t].axes[s]=c[s];i.buttons.forEach(function(e,n){r[t].pressed[n]=e.pressed})}}}),r},e}();e.CONTROLLER_PROFILE=n,e.OCULUS_GO={TOUCHPAD_CLICK:2,INDEX_TRIGGER:0,TOUCHPAD_X:0,TOUCHPAD_Y:1},e.OCULUS_QUEST={BUTTON_B:5,BUTTON_A:4,BUTTON_Y:5,BUTTON_X:4,THUMBSTICK_CLICK:3,BUTTON_UNKNOWN:2,HAND_TRIGGER:1,INDEX_TRIGGER:0,THUMBSTICK_X:2,THUMBSTICK_Y:3},e.XRCONTROLLER=o});
//# sourceMappingURL=three-xr-controller.umd.js.map
