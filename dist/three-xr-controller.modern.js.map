{"version":3,"file":"three-xr-controller.modern.js","sources":["../src/three-xr-controller.js"],"sourcesContent":["/**\n * Author: Mitch Allen (https://mitchallen.com)\n *\n * References: \n *  https://developer.oculus.com/documentation/unity/unity-ovrinput/\n *  https://github.com/MozillaReality/WebXR-emulator-extension/issues/237\n */\n\nexport const CONTROLLER_PROFILE = {\n  OCULUS_GO: 'oculus-go',\n  OCULUS_TOUCH: 'oculus-touch'\n}\n\nexport const OCULUS_GO = {\n  // Values map to gamepad array positions\n  // Axis2D.PrimaryTouchpad\n  // Button.Back, Button.Two\n  TOUCHPAD_CLICK: 2,  // Button.One, Button.PrimaryTouchpad (click)\n  INDEX_TRIGGER: 0,   // Button.PrimaryIndexTrigger\n  // axes\n  TOUCHPAD_X:  0,     // .axes[0]\n  TOUCHPAD_Y:  1,     // .axes[1]\n}\n\nexport const OCULUS_QUEST =\n{\n  // Values map to gamepad array positions\n  BUTTON_B: 5,  // RIGHT: Button.Two, RawButton.A\n  BUTTON_A: 4,  // RIGHT: Button.One, RawButton.B\n  BUTTON_Y: 5,  // LEFT: Button.Two, RawButton.Y, Button.Four (combined controller)\n  BUTTON_X: 4,  // LEFT: Button.One, RawButton.X, Button.Three (combined controller)\n  THUMBSTICK_CLICK: 3, // Select Chrome in extension???, RawButton.LThumbstick, Button.PrimaryThumbstick\n  BUTTON_UNKNOWN: 2,  // Unknown on Quest, used by touchpad click on Go\n  HAND_TRIGGER: 1, // Squeeze / Button.PrimaryHandTrigger (combined controller)\n  INDEX_TRIGGER: 0, // Select / Button.PrimaryIndexTrigger (combined controller)\n  // axes\n  THUMBSTICK_X:  2,     // .axes[2]\n  THUMBSTICK_Y:  3,     // .axes[3]\n}\n\nexport class XRCONTROLLER {\n\n  // Setup controller connect listeners\n\n  static connect( spec = {} ) {\n\n    let {\n      xr = null,\n    } = spec;\n\n    if( !xr ) {\n      throw new Error('.create requires xr');\n    }\n\n    let controllers = [];\n\n    let c0 = xr.getController(0);\n    let c1 = xr.getController(1);\n\n    c0.addEventListener('connected', function (event) {\n      controllers.push(event.data);\n    });\n\n    c1.addEventListener('connected', function (event) {\n      controllers.push(event.data);\n    });\n\n    return {\n      controllers,\n      c0,\n      c1,\n    }\n\n  }\n\n  // Get the current state of the buttons\n\n  static getState(spec = {}) {\n    let {\n      controllers = []\n    } = spec;\n\n    // Return object to be filled in below with current state\n\n    let controller = {\n      profile: 'unknown',\n      left: {\n        axes: [],\n        pressed: []\n      },\n      right: {\n        axes: [],\n        pressed: []\n      }\n    }\n\n    // Loop through the controller states and build the return object\n\n    controllers.forEach(function (ctrl, ic) {\n\n      const handedness = ctrl.handedness;\n      if (!handedness) return;\n      var gp = ctrl.gamepad;\n      if (!gp) return;\n      var profiles = ctrl.profiles;\n      var axes = gp.axes;\n\n      let deviceProfiles = [ \n        CONTROLLER_PROFILE.OCULUS_GO, \n        CONTROLLER_PROFILE.OCULUS_TOUCH,\n      ];\n\n      deviceProfiles.forEach(\n        function (p) {\n          if (profiles.includes(p)) {\n            controller.profile = p;\n          }\n        });\n\n      if (profiles && axes) {\n        for (let a = 0; a < axes.length; a++) {\n          controller[handedness].axes[a] = axes[a];\n        }\n      }\n\n      gp.buttons.forEach(function (btn, bx) {\n        controller[handedness].pressed[bx] = btn.pressed;\n      })\n\n    });\n\n    return controller;\n  }\n}"],"names":["CONTROLLER_PROFILE","OCULUS_GO","OCULUS_TOUCH","TOUCHPAD_CLICK","INDEX_TRIGGER","TOUCHPAD_X","TOUCHPAD_Y","OCULUS_QUEST","BUTTON_B","BUTTON_A","BUTTON_Y","BUTTON_X","THUMBSTICK_CLICK","BUTTON_UNKNOWN","HAND_TRIGGER","THUMBSTICK_X","THUMBSTICK_Y","XRCONTROLLER","[object Object]","spec","xr","Error","controllers","c0","getController","c1","addEventListener","event","push","data","controller","profile","left","axes","pressed","right","forEach","ctrl","ic","handedness","gp","gamepad","profiles","p","includes","a","length","buttons","btn","bx"],"mappings":"AAQaA,MAAAA,EAAqB,CAChCC,UAAW,YACXC,aAAc,gBAGHD,EAAY,CAIvBE,eAAgB,EAChBC,cAAe,EAEfC,WAAa,EACbC,WAAa,GAGFC,EACb,CAEEC,SAAU,EACVC,SAAU,EACVC,SAAU,EACVC,SAAU,EACVC,iBAAkB,EAClBC,eAAgB,EAChBC,aAAc,EACdV,cAAe,EAEfW,aAAe,EACfC,aAAe,SAGJC,EAIXC,eAAgBC,EAAO,IAErB,IAAIC,GACFA,EAAK,MACHD,EAEJ,IAAKC,EACH,UAAUC,MAAM,uBAGlB,IAAIC,EAAc,GAEdC,EAAKH,EAAGI,cAAc,GACtBC,EAAKL,EAAGI,cAAc,GAU1B,OARAD,EAAGG,iBAAiB,YAAa,SAAUC,GACzCL,EAAYM,KAAKD,EAAME,QAGzBJ,EAAGC,iBAAiB,YAAa,SAAUC,GACzCL,EAAYM,KAAKD,EAAME,QAGlB,CACLP,YAAAA,EACAC,GAAAA,EACAE,GAAAA,GAOJP,gBAAgBC,EAAO,IACrB,IAAIG,YACFA,EAAc,IACZH,EAIAW,EAAa,CACfC,QAAS,UACTC,KAAM,CACJC,KAAM,GACNC,QAAS,IAEXC,MAAO,CACLF,KAAM,GACNC,QAAS,KAuCb,OAjCAZ,EAAYc,QAAQ,SAAUC,EAAMC,GAElC,MAAMC,EAAaF,EAAKE,WACxB,GAAKA,EAAL,CACA,IAAIC,EAAKH,EAAKI,QACd,GAAKD,EAAL,CACA,IAAIE,EAAWL,EAAKK,SAChBT,EAAOO,EAAGP,KAcd,GAZqB,CACnBjC,EAAmBC,UACnBD,EAAmBE,cAGNkC,QACb,SAAUO,GACJD,EAASE,SAASD,KACpBb,EAAWC,QAAUY,KAIvBD,GAAYT,EACd,IAAK,IAAIY,EAAI,EAAGA,EAAIZ,EAAKa,OAAQD,IAC/Bf,EAAWS,GAAYN,KAAKY,GAAKZ,EAAKY,GAI1CL,EAAGO,QAAQX,QAAQ,SAAUY,EAAKC,GAChCnB,EAAWS,GAAYL,QAAQe,GAAMD,EAAId,cAKtCJ"}